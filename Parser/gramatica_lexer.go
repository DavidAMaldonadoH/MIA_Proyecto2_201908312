// Code generated from Gramatica.g4 by ANTLR 4.10.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type GramaticaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var gramaticalexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func gramaticalexerLexerInit() {
	staticData := &gramaticalexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'.'", "'-'", "'='",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "EXEC", "MKDISK", "RMDISK", "FDISK", "MOUNT", "MKFS",
		"LOGIN", "LOGOUT", "MKGRP", "RMGRP", "MKUSER", "RMUSR", "MKFILE", "MKDIR",
		"PAUSE", "REP", "SIZE", "FIT", "UNIT", "PATH", "TYPE", "NAME", "IDENT",
		"USUARIO", "PASSWORD", "PWD", "GRP", "RP", "CONT", "RUTA", "BF", "FF",
		"WF", "KILO", "MEGA", "BYTE", "PRIMARY", "EXTENDED", "LOGIC", "FAST",
		"FULL", "ENTERO", "STRING", "ID", "DIR", "COMS", "COMD", "WS",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "EXEC", "MKDISK", "RMDISK", "FDISK", "MOUNT",
		"MKFS", "LOGIN", "LOGOUT", "MKGRP", "RMGRP", "MKUSER", "RMUSR", "MKFILE",
		"MKDIR", "PAUSE", "REP", "SIZE", "FIT", "UNIT", "PATH", "TYPE", "NAME",
		"IDENT", "USUARIO", "PASSWORD", "PWD", "GRP", "RP", "CONT", "RUTA",
		"BF", "FF", "WF", "KILO", "MEGA", "BYTE", "PRIMARY", "EXTENDED", "LOGIC",
		"FAST", "FULL", "ENTERO", "STRING", "ID", "DIR", "COMS", "COMD", "WS",
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N",
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 51, 473, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 1, 0, 1, 0, 1, 1,
		1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8,
		1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1,
		26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		29, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39,
		1, 39, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1,
		43, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 3, 44, 359, 8, 44, 1, 44, 4, 44,
		362, 8, 44, 11, 44, 12, 44, 363, 1, 45, 1, 45, 5, 45, 368, 8, 45, 10, 45,
		12, 45, 371, 9, 45, 1, 45, 1, 45, 1, 46, 4, 46, 376, 8, 46, 11, 46, 12,
		46, 377, 1, 47, 1, 47, 4, 47, 382, 8, 47, 11, 47, 12, 47, 383, 4, 47, 386,
		8, 47, 11, 47, 12, 47, 387, 1, 48, 1, 48, 5, 48, 392, 8, 48, 10, 48, 12,
		48, 395, 9, 48, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49,
		5, 49, 405, 8, 49, 10, 49, 12, 49, 408, 9, 49, 1, 49, 1, 49, 1, 49, 1,
		49, 1, 49, 1, 50, 4, 50, 416, 8, 50, 11, 50, 12, 50, 417, 1, 50, 1, 50,
		1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1, 55, 1,
		56, 1, 56, 1, 57, 1, 57, 1, 58, 1, 58, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61,
		1, 61, 1, 62, 1, 62, 1, 63, 1, 63, 1, 64, 1, 64, 1, 65, 1, 65, 1, 66, 1,
		66, 1, 67, 1, 67, 1, 68, 1, 68, 1, 69, 1, 69, 1, 70, 1, 70, 1, 71, 1, 71,
		1, 72, 1, 72, 1, 73, 1, 73, 1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 2,
		393, 406, 0, 77, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17,
		9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35,
		18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53,
		27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71,
		36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89,
		45, 91, 46, 93, 47, 95, 48, 97, 49, 99, 50, 101, 51, 103, 0, 105, 0, 107,
		0, 109, 0, 111, 0, 113, 0, 115, 0, 117, 0, 119, 0, 121, 0, 123, 0, 125,
		0, 127, 0, 129, 0, 131, 0, 133, 0, 135, 0, 137, 0, 139, 0, 141, 0, 143,
		0, 145, 0, 147, 0, 149, 0, 151, 0, 153, 0, 1, 0, 31, 1, 0, 48, 57, 1, 0,
		34, 34, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 3, 0, 10, 10, 34, 34, 124,
		124, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98,
		98, 2, 0, 67, 67, 99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 69, 69, 101, 101,
		2, 0, 70, 70, 102, 102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104,
		2, 0, 73, 73, 105, 105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107,
		2, 0, 76, 76, 108, 108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110,
		2, 0, 79, 79, 111, 111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113,
		2, 0, 82, 82, 114, 114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116,
		2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119,
		2, 0, 88, 88, 120, 120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122,
		455, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0,
		0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1,
		0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23,
		1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0,
		31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0,
		0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0,
		0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0,
		0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1,
		0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69,
		1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0,
		77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0,
		0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0,
		0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0,
		0, 0, 0, 101, 1, 0, 0, 0, 1, 155, 1, 0, 0, 0, 3, 157, 1, 0, 0, 0, 5, 159,
		1, 0, 0, 0, 7, 161, 1, 0, 0, 0, 9, 166, 1, 0, 0, 0, 11, 173, 1, 0, 0, 0,
		13, 180, 1, 0, 0, 0, 15, 186, 1, 0, 0, 0, 17, 192, 1, 0, 0, 0, 19, 197,
		1, 0, 0, 0, 21, 203, 1, 0, 0, 0, 23, 210, 1, 0, 0, 0, 25, 216, 1, 0, 0,
		0, 27, 222, 1, 0, 0, 0, 29, 228, 1, 0, 0, 0, 31, 234, 1, 0, 0, 0, 33, 241,
		1, 0, 0, 0, 35, 247, 1, 0, 0, 0, 37, 253, 1, 0, 0, 0, 39, 257, 1, 0, 0,
		0, 41, 262, 1, 0, 0, 0, 43, 266, 1, 0, 0, 0, 45, 271, 1, 0, 0, 0, 47, 276,
		1, 0, 0, 0, 49, 281, 1, 0, 0, 0, 51, 286, 1, 0, 0, 0, 53, 289, 1, 0, 0,
		0, 55, 297, 1, 0, 0, 0, 57, 306, 1, 0, 0, 0, 59, 310, 1, 0, 0, 0, 61, 314,
		1, 0, 0, 0, 63, 316, 1, 0, 0, 0, 65, 321, 1, 0, 0, 0, 67, 326, 1, 0, 0,
		0, 69, 329, 1, 0, 0, 0, 71, 332, 1, 0, 0, 0, 73, 335, 1, 0, 0, 0, 75, 337,
		1, 0, 0, 0, 77, 339, 1, 0, 0, 0, 79, 341, 1, 0, 0, 0, 81, 343, 1, 0, 0,
		0, 83, 345, 1, 0, 0, 0, 85, 347, 1, 0, 0, 0, 87, 352, 1, 0, 0, 0, 89, 358,
		1, 0, 0, 0, 91, 365, 1, 0, 0, 0, 93, 375, 1, 0, 0, 0, 95, 385, 1, 0, 0,
		0, 97, 389, 1, 0, 0, 0, 99, 400, 1, 0, 0, 0, 101, 415, 1, 0, 0, 0, 103,
		421, 1, 0, 0, 0, 105, 423, 1, 0, 0, 0, 107, 425, 1, 0, 0, 0, 109, 427,
		1, 0, 0, 0, 111, 429, 1, 0, 0, 0, 113, 431, 1, 0, 0, 0, 115, 433, 1, 0,
		0, 0, 117, 435, 1, 0, 0, 0, 119, 437, 1, 0, 0, 0, 121, 439, 1, 0, 0, 0,
		123, 441, 1, 0, 0, 0, 125, 443, 1, 0, 0, 0, 127, 445, 1, 0, 0, 0, 129,
		447, 1, 0, 0, 0, 131, 449, 1, 0, 0, 0, 133, 451, 1, 0, 0, 0, 135, 453,
		1, 0, 0, 0, 137, 455, 1, 0, 0, 0, 139, 457, 1, 0, 0, 0, 141, 459, 1, 0,
		0, 0, 143, 461, 1, 0, 0, 0, 145, 463, 1, 0, 0, 0, 147, 465, 1, 0, 0, 0,
		149, 467, 1, 0, 0, 0, 151, 469, 1, 0, 0, 0, 153, 471, 1, 0, 0, 0, 155,
		156, 5, 46, 0, 0, 156, 2, 1, 0, 0, 0, 157, 158, 5, 45, 0, 0, 158, 4, 1,
		0, 0, 0, 159, 160, 5, 61, 0, 0, 160, 6, 1, 0, 0, 0, 161, 162, 3, 111, 55,
		0, 162, 163, 3, 149, 74, 0, 163, 164, 3, 111, 55, 0, 164, 165, 3, 107,
		53, 0, 165, 8, 1, 0, 0, 0, 166, 167, 3, 127, 63, 0, 167, 168, 3, 123, 61,
		0, 168, 169, 3, 109, 54, 0, 169, 170, 3, 119, 59, 0, 170, 171, 3, 139,
		69, 0, 171, 172, 3, 123, 61, 0, 172, 10, 1, 0, 0, 0, 173, 174, 3, 137,
		68, 0, 174, 175, 3, 127, 63, 0, 175, 176, 3, 109, 54, 0, 176, 177, 3, 119,
		59, 0, 177, 178, 3, 139, 69, 0, 178, 179, 3, 123, 61, 0, 179, 12, 1, 0,
		0, 0, 180, 181, 3, 113, 56, 0, 181, 182, 3, 109, 54, 0, 182, 183, 3, 119,
		59, 0, 183, 184, 3, 139, 69, 0, 184, 185, 3, 123, 61, 0, 185, 14, 1, 0,
		0, 0, 186, 187, 3, 127, 63, 0, 187, 188, 3, 131, 65, 0, 188, 189, 3, 143,
		71, 0, 189, 190, 3, 129, 64, 0, 190, 191, 3, 141, 70, 0, 191, 16, 1, 0,
		0, 0, 192, 193, 3, 127, 63, 0, 193, 194, 3, 123, 61, 0, 194, 195, 3, 113,
		56, 0, 195, 196, 3, 139, 69, 0, 196, 18, 1, 0, 0, 0, 197, 198, 3, 125,
		62, 0, 198, 199, 3, 131, 65, 0, 199, 200, 3, 115, 57, 0, 200, 201, 3, 119,
		59, 0, 201, 202, 3, 129, 64, 0, 202, 20, 1, 0, 0, 0, 203, 204, 3, 125,
		62, 0, 204, 205, 3, 131, 65, 0, 205, 206, 3, 115, 57, 0, 206, 207, 3, 131,
		65, 0, 207, 208, 3, 143, 71, 0, 208, 209, 3, 141, 70, 0, 209, 22, 1, 0,
		0, 0, 210, 211, 3, 127, 63, 0, 211, 212, 3, 123, 61, 0, 212, 213, 3, 115,
		57, 0, 213, 214, 3, 137, 68, 0, 214, 215, 3, 133, 66, 0, 215, 24, 1, 0,
		0, 0, 216, 217, 3, 137, 68, 0, 217, 218, 3, 127, 63, 0, 218, 219, 3, 115,
		57, 0, 219, 220, 3, 137, 68, 0, 220, 221, 3, 133, 66, 0, 221, 26, 1, 0,
		0, 0, 222, 223, 3, 127, 63, 0, 223, 224, 3, 123, 61, 0, 224, 225, 3, 143,
		71, 0, 225, 226, 3, 139, 69, 0, 226, 227, 3, 137, 68, 0, 227, 28, 1, 0,
		0, 0, 228, 229, 3, 137, 68, 0, 229, 230, 3, 127, 63, 0, 230, 231, 3, 143,
		71, 0, 231, 232, 3, 139, 69, 0, 232, 233, 3, 137, 68, 0, 233, 30, 1, 0,
		0, 0, 234, 235, 3, 127, 63, 0, 235, 236, 3, 123, 61, 0, 236, 237, 3, 113,
		56, 0, 237, 238, 3, 119, 59, 0, 238, 239, 3, 125, 62, 0, 239, 240, 3, 111,
		55, 0, 240, 32, 1, 0, 0, 0, 241, 242, 3, 127, 63, 0, 242, 243, 3, 123,
		61, 0, 243, 244, 3, 109, 54, 0, 244, 245, 3, 119, 59, 0, 245, 246, 3, 137,
		68, 0, 246, 34, 1, 0, 0, 0, 247, 248, 3, 133, 66, 0, 248, 249, 3, 103,
		51, 0, 249, 250, 3, 143, 71, 0, 250, 251, 3, 139, 69, 0, 251, 252, 3, 111,
		55, 0, 252, 36, 1, 0, 0, 0, 253, 254, 3, 137, 68, 0, 254, 255, 3, 111,
		55, 0, 255, 256, 3, 133, 66, 0, 256, 38, 1, 0, 0, 0, 257, 258, 3, 139,
		69, 0, 258, 259, 3, 119, 59, 0, 259, 260, 3, 153, 76, 0, 260, 261, 3, 111,
		55, 0, 261, 40, 1, 0, 0, 0, 262, 263, 3, 113, 56, 0, 263, 264, 3, 119,
		59, 0, 264, 265, 3, 141, 70, 0, 265, 42, 1, 0, 0, 0, 266, 267, 3, 143,
		71, 0, 267, 268, 3, 129, 64, 0, 268, 269, 3, 119, 59, 0, 269, 270, 3, 141,
		70, 0, 270, 44, 1, 0, 0, 0, 271, 272, 3, 133, 66, 0, 272, 273, 3, 103,
		51, 0, 273, 274, 3, 141, 70, 0, 274, 275, 3, 117, 58, 0, 275, 46, 1, 0,
		0, 0, 276, 277, 3, 141, 70, 0, 277, 278, 3, 151, 75, 0, 278, 279, 3, 133,
		66, 0, 279, 280, 3, 111, 55, 0, 280, 48, 1, 0, 0, 0, 281, 282, 3, 129,
		64, 0, 282, 283, 3, 103, 51, 0, 283, 284, 3, 127, 63, 0, 284, 285, 3, 111,
		55, 0, 285, 50, 1, 0, 0, 0, 286, 287, 3, 119, 59, 0, 287, 288, 3, 109,
		54, 0, 288, 52, 1, 0, 0, 0, 289, 290, 3, 143, 71, 0, 290, 291, 3, 139,
		69, 0, 291, 292, 3, 143, 71, 0, 292, 293, 3, 103, 51, 0, 293, 294, 3, 137,
		68, 0, 294, 295, 3, 119, 59, 0, 295, 296, 3, 131, 65, 0, 296, 54, 1, 0,
		0, 0, 297, 298, 3, 133, 66, 0, 298, 299, 3, 103, 51, 0, 299, 300, 3, 139,
		69, 0, 300, 301, 3, 139, 69, 0, 301, 302, 3, 147, 73, 0, 302, 303, 3, 131,
		65, 0, 303, 304, 3, 137, 68, 0, 304, 305, 3, 109, 54, 0, 305, 56, 1, 0,
		0, 0, 306, 307, 3, 133, 66, 0, 307, 308, 3, 147, 73, 0, 308, 309, 3, 109,
		54, 0, 309, 58, 1, 0, 0, 0, 310, 311, 3, 115, 57, 0, 311, 312, 3, 137,
		68, 0, 312, 313, 3, 133, 66, 0, 313, 60, 1, 0, 0, 0, 314, 315, 3, 137,
		68, 0, 315, 62, 1, 0, 0, 0, 316, 317, 3, 107, 53, 0, 317, 318, 3, 131,
		65, 0, 318, 319, 3, 129, 64, 0, 319, 320, 3, 141, 70, 0, 320, 64, 1, 0,
		0, 0, 321, 322, 3, 137, 68, 0, 322, 323, 3, 143, 71, 0, 323, 324, 3, 141,
		70, 0, 324, 325, 3, 103, 51, 0, 325, 66, 1, 0, 0, 0, 326, 327, 3, 105,
		52, 0, 327, 328, 3, 113, 56, 0, 328, 68, 1, 0, 0, 0, 329, 330, 3, 113,
		56, 0, 330, 331, 3, 113, 56, 0, 331, 70, 1, 0, 0, 0, 332, 333, 3, 147,
		73, 0, 333, 334, 3, 113, 56, 0, 334, 72, 1, 0, 0, 0, 335, 336, 3, 123,
		61, 0, 336, 74, 1, 0, 0, 0, 337, 338, 3, 127, 63, 0, 338, 76, 1, 0, 0,
		0, 339, 340, 3, 105, 52, 0, 340, 78, 1, 0, 0, 0, 341, 342, 3, 133, 66,
		0, 342, 80, 1, 0, 0, 0, 343, 344, 3, 111, 55, 0, 344, 82, 1, 0, 0, 0, 345,
		346, 3, 125, 62, 0, 346, 84, 1, 0, 0, 0, 347, 348, 3, 113, 56, 0, 348,
		349, 3, 103, 51, 0, 349, 350, 3, 139, 69, 0, 350, 351, 3, 141, 70, 0, 351,
		86, 1, 0, 0, 0, 352, 353, 3, 113, 56, 0, 353, 354, 3, 143, 71, 0, 354,
		355, 3, 125, 62, 0, 355, 356, 3, 125, 62, 0, 356, 88, 1, 0, 0, 0, 357,
		359, 5, 45, 0, 0, 358, 357, 1, 0, 0, 0, 358, 359, 1, 0, 0, 0, 359, 361,
		1, 0, 0, 0, 360, 362, 7, 0, 0, 0, 361, 360, 1, 0, 0, 0, 362, 363, 1, 0,
		0, 0, 363, 361, 1, 0, 0, 0, 363, 364, 1, 0, 0, 0, 364, 90, 1, 0, 0, 0,
		365, 369, 5, 34, 0, 0, 366, 368, 8, 1, 0, 0, 367, 366, 1, 0, 0, 0, 368,
		371, 1, 0, 0, 0, 369, 367, 1, 0, 0, 0, 369, 370, 1, 0, 0, 0, 370, 372,
		1, 0, 0, 0, 371, 369, 1, 0, 0, 0, 372, 373, 5, 34, 0, 0, 373, 92, 1, 0,
		0, 0, 374, 376, 7, 2, 0, 0, 375, 374, 1, 0, 0, 0, 376, 377, 1, 0, 0, 0,
		377, 375, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 94, 1, 0, 0, 0, 379, 381,
		5, 47, 0, 0, 380, 382, 8, 3, 0, 0, 381, 380, 1, 0, 0, 0, 382, 383, 1, 0,
		0, 0, 383, 381, 1, 0, 0, 0, 383, 384, 1, 0, 0, 0, 384, 386, 1, 0, 0, 0,
		385, 379, 1, 0, 0, 0, 386, 387, 1, 0, 0, 0, 387, 385, 1, 0, 0, 0, 387,
		388, 1, 0, 0, 0, 388, 96, 1, 0, 0, 0, 389, 393, 5, 35, 0, 0, 390, 392,
		9, 0, 0, 0, 391, 390, 1, 0, 0, 0, 392, 395, 1, 0, 0, 0, 393, 394, 1, 0,
		0, 0, 393, 391, 1, 0, 0, 0, 394, 396, 1, 0, 0, 0, 395, 393, 1, 0, 0, 0,
		396, 397, 5, 10, 0, 0, 397, 398, 1, 0, 0, 0, 398, 399, 6, 48, 0, 0, 399,
		98, 1, 0, 0, 0, 400, 401, 5, 35, 0, 0, 401, 402, 5, 42, 0, 0, 402, 406,
		1, 0, 0, 0, 403, 405, 9, 0, 0, 0, 404, 403, 1, 0, 0, 0, 405, 408, 1, 0,
		0, 0, 406, 407, 1, 0, 0, 0, 406, 404, 1, 0, 0, 0, 407, 409, 1, 0, 0, 0,
		408, 406, 1, 0, 0, 0, 409, 410, 5, 42, 0, 0, 410, 411, 5, 35, 0, 0, 411,
		412, 1, 0, 0, 0, 412, 413, 6, 49, 0, 0, 413, 100, 1, 0, 0, 0, 414, 416,
		7, 4, 0, 0, 415, 414, 1, 0, 0, 0, 416, 417, 1, 0, 0, 0, 417, 415, 1, 0,
		0, 0, 417, 418, 1, 0, 0, 0, 418, 419, 1, 0, 0, 0, 419, 420, 6, 50, 0, 0,
		420, 102, 1, 0, 0, 0, 421, 422, 7, 5, 0, 0, 422, 104, 1, 0, 0, 0, 423,
		424, 7, 6, 0, 0, 424, 106, 1, 0, 0, 0, 425, 426, 7, 7, 0, 0, 426, 108,
		1, 0, 0, 0, 427, 428, 7, 8, 0, 0, 428, 110, 1, 0, 0, 0, 429, 430, 7, 9,
		0, 0, 430, 112, 1, 0, 0, 0, 431, 432, 7, 10, 0, 0, 432, 114, 1, 0, 0, 0,
		433, 434, 7, 11, 0, 0, 434, 116, 1, 0, 0, 0, 435, 436, 7, 12, 0, 0, 436,
		118, 1, 0, 0, 0, 437, 438, 7, 13, 0, 0, 438, 120, 1, 0, 0, 0, 439, 440,
		7, 14, 0, 0, 440, 122, 1, 0, 0, 0, 441, 442, 7, 15, 0, 0, 442, 124, 1,
		0, 0, 0, 443, 444, 7, 16, 0, 0, 444, 126, 1, 0, 0, 0, 445, 446, 7, 17,
		0, 0, 446, 128, 1, 0, 0, 0, 447, 448, 7, 18, 0, 0, 448, 130, 1, 0, 0, 0,
		449, 450, 7, 19, 0, 0, 450, 132, 1, 0, 0, 0, 451, 452, 7, 20, 0, 0, 452,
		134, 1, 0, 0, 0, 453, 454, 7, 21, 0, 0, 454, 136, 1, 0, 0, 0, 455, 456,
		7, 22, 0, 0, 456, 138, 1, 0, 0, 0, 457, 458, 7, 23, 0, 0, 458, 140, 1,
		0, 0, 0, 459, 460, 7, 24, 0, 0, 460, 142, 1, 0, 0, 0, 461, 462, 7, 25,
		0, 0, 462, 144, 1, 0, 0, 0, 463, 464, 7, 26, 0, 0, 464, 146, 1, 0, 0, 0,
		465, 466, 7, 27, 0, 0, 466, 148, 1, 0, 0, 0, 467, 468, 7, 28, 0, 0, 468,
		150, 1, 0, 0, 0, 469, 470, 7, 29, 0, 0, 470, 152, 1, 0, 0, 0, 471, 472,
		7, 30, 0, 0, 472, 154, 1, 0, 0, 0, 11, 0, 358, 363, 369, 375, 377, 383,
		387, 393, 406, 417, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// GramaticaLexerInit initializes any static state used to implement GramaticaLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewGramaticaLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GramaticaLexerInit() {
	staticData := &gramaticalexerLexerStaticData
	staticData.once.Do(gramaticalexerLexerInit)
}

// NewGramaticaLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewGramaticaLexer(input antlr.CharStream) *GramaticaLexer {
	GramaticaLexerInit()
	l := new(GramaticaLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &gramaticalexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Gramatica.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// GramaticaLexer tokens.
const (
	GramaticaLexerT__0     = 1
	GramaticaLexerT__1     = 2
	GramaticaLexerT__2     = 3
	GramaticaLexerEXEC     = 4
	GramaticaLexerMKDISK   = 5
	GramaticaLexerRMDISK   = 6
	GramaticaLexerFDISK    = 7
	GramaticaLexerMOUNT    = 8
	GramaticaLexerMKFS     = 9
	GramaticaLexerLOGIN    = 10
	GramaticaLexerLOGOUT   = 11
	GramaticaLexerMKGRP    = 12
	GramaticaLexerRMGRP    = 13
	GramaticaLexerMKUSER   = 14
	GramaticaLexerRMUSR    = 15
	GramaticaLexerMKFILE   = 16
	GramaticaLexerMKDIR    = 17
	GramaticaLexerPAUSE    = 18
	GramaticaLexerREP      = 19
	GramaticaLexerSIZE     = 20
	GramaticaLexerFIT      = 21
	GramaticaLexerUNIT     = 22
	GramaticaLexerPATH     = 23
	GramaticaLexerTYPE     = 24
	GramaticaLexerNAME     = 25
	GramaticaLexerIDENT    = 26
	GramaticaLexerUSUARIO  = 27
	GramaticaLexerPASSWORD = 28
	GramaticaLexerPWD      = 29
	GramaticaLexerGRP      = 30
	GramaticaLexerRP       = 31
	GramaticaLexerCONT     = 32
	GramaticaLexerRUTA     = 33
	GramaticaLexerBF       = 34
	GramaticaLexerFF       = 35
	GramaticaLexerWF       = 36
	GramaticaLexerKILO     = 37
	GramaticaLexerMEGA     = 38
	GramaticaLexerBYTE     = 39
	GramaticaLexerPRIMARY  = 40
	GramaticaLexerEXTENDED = 41
	GramaticaLexerLOGIC    = 42
	GramaticaLexerFAST     = 43
	GramaticaLexerFULL     = 44
	GramaticaLexerENTERO   = 45
	GramaticaLexerSTRING   = 46
	GramaticaLexerID       = 47
	GramaticaLexerDIR      = 48
	GramaticaLexerCOMS     = 49
	GramaticaLexerCOMD     = 50
	GramaticaLexerWS       = 51
)
